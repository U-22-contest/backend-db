// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/postgresql"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(uuid())
  username  String    @unique
  email     String    @unique
  password  String
  novels    Novel[]   @relation("UserNovels")
  comments  Comment[] @relation("UserComments")
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Novel {
  id        String    @id @default(uuid())
  sharedId  String    @unique
  authorId  String
  author    User      @relation("UserNovels", fields: [authorId], references: [id], onDelete: Cascade)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  comments  Comment[] @relation("NovelComments")
}

model Comment {
  id         String   @id @default(uuid())
  sharedId   String   @unique
  userId     String
  user       User     @relation("UserComments", fields: [userId], references: [id], onDelete: Cascade)
  novelId    String
  novel      Novel    @relation("NovelComments", fields: [novelId], references: [id], onDelete: Cascade)
  startIndex Int
  endIndex   Int
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}
